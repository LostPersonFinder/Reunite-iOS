/*
 PLplusWebServices.m
 The implementation classes and methods for the plusWebServices web service.
 Generated by SudzC.com
 */

#import "PLplusWebServices.h"
#import "WSCommon.h"

#import "Soap.h"

#import "PLrequestAnonTokenRequestType.h"
#import "PLgetEventDataRequestType.h"
#import "PLgetGroupListRequestType.h"
#import "PLgetSessionCookieRequestType.h"
#import "PLgetImageCountsAndTokensRequestType.h"
#import "PLgetHospitalListRequestType.h"
#import "PLgetHospitalDataResponseType.h"
#import "PLrequestUserTokenRequestType.h"
#import "PLpurgeUserTokensResponseType.h"
#import "PLresetUserPasswordRequestType.h"
#import "PLforgotUsernameRequestType.h"
#import "PLupdateRecordResponseType.h"
#import "PLreportAbuseResponseType.h"
#import "PLaddCommentResponseType.h"
#import "PLappCheckRequestType.h"
#import "PLregisterApplePushTokenResponseType.h"
#import "PLgetHospitalDataRequestType.h"
#import "PLgetHospitalPolicyRequestType.h"
#import "PLgetHospitalLegaleseRequestType.h"
#import "PLgetHospitalLegaleseAnonRequestType.h"
#import "PLgetHospitalLegaleseTimestampsRequestType.h"
#import "PLreservePatientIdsRequestType.h"
#import "PLrequestAnonTokenResponseType.h"
#import "PLpurgeUserTokensRequestType.h"
#import "PLpingEchoRequestType.h"
#import "PLpingEchoResponseType.h"
#import "PLgetEventDataResponseType.h"
#import "PLgetGroupListResponseType.h"
#import "PLregisterUserResponseType.h"
#import "PLchangeUserPasswordResponseType.h"
#import "PLresetUserPasswordResponseType.h"
#import "PLforgotUsernameResponseType.h"
#import "PLreportResponseType.h"
#import "PLreportAbuseRequestType.h"
#import "PLgetImageListRequestType.h"
#import "PLgetImageListResponseType.h"
#import "PLgetImageListBlockRequestType.h"
#import "PLgetImageListBlockResponseType.h"
#import "PLgetNullTokenListRequestType.h"
#import "PLgetNullTokenListResponseType.h"
#import "PLgetHospitalListResponseType.h"
#import "PLgetHospitalLegaleseResponseType.h"
#import "PLgetHospitalLegaleseAnonResponseType.h"
#import "PLgetUuidByMassCasualtyIdRequestType.h"
#import "PLgetUuidByMassCasualtyIdResponseType.h"
#import "PLreservePatientIdsResponseType.h"
#import "PLchangeUserPasswordRequestType.h"
#import "PLgetSessionCookieResponseType.h"
#import "PLreportRequestType.h"
#import "PLappCheckResponseType.h"
#import "PLgetHospitalLegaleseTimestampsResponseType.h"
#import "PLrequestUserTokenResponseType.h"
#import "PLsearchResponseType.h"
#import "PLupdateRecordRequestType.h"
#import "PLregisterApplePushTokenRequestType.h"
#import "PLregisterUserRequestType.h"
#import "PLaddCommentRequestType.h"
#import "PLgetImageCountsAndTokensResponseType.h"
#import "PLsearchRequestType.h"
#import "PLgetHospitalPolicyResponseType.h"
#import "PLfollowRecordResponseType.h"
#import "PLfollowRecordResponseType.h"
#import "FilterViewController.h"
/* Implementation of the service */

@implementation PLplusWebServices

- (id) init
{
    if(self = [super init])
    {
        self.serviceUrl = [NSString stringWithFormat:@"%@%@/%@",[[NSUserDefaults standardUserDefaults] objectForKey:GLOBAL_KEY_SERVER_HTTP], [[NSUserDefaults standardUserDefaults] objectForKey:GLOBAL_KEY_SERVER_NAME], [[NSUserDefaults standardUserDefaults] objectForKey:GLOBAL_KEY_SERVER_API_VERSION]];
 
        self.headers = nil;
        self.logging = NO;
    }
    return self;
}

- (id) initWithUsername: (NSString*) username andPassword: (NSString*) password {
    if(self = [super initWithUsername:username andPassword:password]) {
    }
    return self;
}

+ (PLplusWebServices*) service {
    return [PLplusWebServices serviceWithUsername:nil andPassword:nil];
}

+ (PLplusWebServices*) serviceWithUsername: (NSString*) username andPassword: (NSString*) password {
    return [[PLplusWebServices alloc] initWithUsername:username andPassword:password];
}


// Returns NSString*
/*  */

- (SoapRequest*)requestUserToken:(id)target action:(SEL)action params:(NSMutableString *)params deserializeTo:(id)deserializeTo {
    
    
    
    NSString *xmlString = params;
    
    NSString *startTag = @"<username>";
    NSString *endTag = @"</username>";
    NSString *responseUserString;
    
    NSScanner *scanner = [[NSScanner alloc] initWithString:xmlString];
    [scanner scanUpToString:startTag intoString:nil];
    scanner.scanLocation += [startTag length];
    [scanner scanUpToString:endTag intoString:&responseUserString];
    
    
    NSString *startPassTag = @"<password>";
    NSString *endPassTag = @"</password>";
    NSString *responsePasswordString;
        [scanner scanUpToString:startPassTag intoString:nil];
    scanner.scanLocation += [startPassTag length];
    [scanner scanUpToString:endPassTag intoString:&responsePasswordString];
    
    
    NSDictionary* mainJSON = [NSDictionary dictionaryWithObjectsAndKeys:@"user",@"call",responseUserString,@"user",responsePasswordString,@"pass",nil];
    
    
    
    
    NSError * err;
    NSData * jsonData = [NSJSONSerialization dataWithJSONObject:mainJSON options:0 error:&err];
    NSString * ResultString = [[NSString alloc] initWithData:jsonData encoding:NSUTF8StringEncoding];
    NSString* _envelope = ResultString;

    SoapRequest* _request = [SoapRequest create: target action: action service: self soapAction:nil postData: _envelope deserializeTo: deserializeTo];
    [_request send];
    return _request;
}


- (SoapRequest*)requestAnonToken:(id)target action:(SEL)action deserializeTo:(id)deserializeTo {
    
    
   // NSString* _envelope = [Soap createEnvelope: @"requestAnonToken" forNamespace: self.namespace forParameters:nil withHeaders: self.headers];
    NSString* _envelope=@ "{\"call\" : \"anon\"}";
    SoapRequest* _request = [SoapRequest create: target action: action service: self soapAction:nil postData: _envelope deserializeTo: deserializeTo];
    [_request send];
    return _request;
}

- (SoapRequest*)purgeUserTokens:(id)target action:(SEL)action params:(NSMutableString *)params deserializeTo:(id)deserializeTo {
    
    
    NSString* _envelope = [Soap createEnvelope: @"purgeUserTokens" forNamespace: self.namespace forParameters: params withHeaders: self.headers];
    SoapRequest* _request = [SoapRequest create: target action: action service: self soapAction: @"?wsdl#purgeUserTokens" postData: _envelope deserializeTo: deserializeTo];
    [_request send];
    return _request;
}

- (SoapRequest*)pingEcho:(id)target action:(SEL)action params:(NSMutableString *)params deserializeTo:(id)deserializeTo {
    
    
   NSString *token= [WSCommon retrieveToken];
    NSDictionary* mainJSON = [NSDictionary dictionaryWithObjectsAndKeys:@"ping",@"call",token,@"token",@"0",@"latitude",@"0",@"longitude", nil];

    NSError * err;
    NSData * jsonData = [NSJSONSerialization dataWithJSONObject:mainJSON options:0 error:&err];
    NSString * ResultString = [[NSString alloc] initWithData:jsonData encoding:NSUTF8StringEncoding];
    NSString* _envelope = ResultString;
    
    
    //NSString* _envelope = [Soap createEnvelope: @"pingEcho" forNamespace: self.namespace forParameters: params withHeaders: self.headers];
    SoapRequest* _request = [SoapRequest create: target action: action service: self soapAction:nil postData: _envelope deserializeTo: deserializeTo];
    [_request send];
    return _request;
}

- (SoapRequest*)getEventData:(id)target action:(SEL)action params:(NSMutableString *)params deserializeTo:(id)deserializeTo {
    
   // NSString* _envelope ;
    
    NSString *token= [WSCommon retrieveToken];

    NSDictionary* mainJSON = [NSDictionary dictionaryWithObjectsAndKeys:@"events",@"call",token,@"token",nil];
    
    
    
    
    NSError * err;
    NSData * jsonData = [NSJSONSerialization dataWithJSONObject:mainJSON options:0 error:&err];
    NSString * ResultString = [[NSString alloc] initWithData:jsonData encoding:NSUTF8StringEncoding];
    NSString* _envelope = ResultString;
    
    
   // NSString* _envelope = [Soap createEnvelope: @"getEventData" forNamespace: self.namespace forParameters: params withHeaders: self.headers];
    SoapRequest* _request = [SoapRequest create: target action: action service: self soapAction: nil postData: _envelope deserializeTo: deserializeTo];
    [_request send];
    return _request;
}

- (SoapRequest*)getGroupList:(id)target action:(SEL)action params:(NSMutableString *)params deserializeTo:(id)deserializeTo {
    
    
    NSString* _envelope = [Soap createEnvelope: @"getGroupList" forNamespace: self.namespace forParameters: params withHeaders: self.headers];
    SoapRequest* _request = [SoapRequest create: target action: action service: self soapAction: @"?wsdl#getGroupList" postData: _envelope deserializeTo: deserializeTo];
    [_request send];
    return _request;
}

- (SoapRequest*)registerUser:(id)target action:(SEL)action params:(NSMutableString *)params deserializeTo:(id)deserializeTo {
     NSString *token= [WSCommon retrieveToken];
     NSString *email= [[NSUserDefaults standardUserDefaults] valueForKey:@"email"];
     NSString *password= [[NSUserDefaults standardUserDefaults] valueForKey:@"password"];
    NSString *locale= [[NSUserDefaults standardUserDefaults] valueForKey:@"language"];

    
    NSDictionary* mainJSON = [NSDictionary dictionaryWithObjectsAndKeys:@"register",@"call",token,@"token",email,@"email",password,@"password",@"true",@"inactive",locale,@"locale", nil];
    NSError * err;
    NSData * jsonData = [NSJSONSerialization dataWithJSONObject:mainJSON options:0 error:&err];
    NSString * ResultString = [[NSString alloc] initWithData:jsonData encoding:NSUTF8StringEncoding];
    NSString* _envelope = ResultString;
    
  //  NSString* _envelope = [Soap createEnvelope: @"registerUser" forNamespace: self.namespace forParameters: params withHeaders: self.headers];
    SoapRequest* _request = [SoapRequest create: target action: action service: self soapAction:nil postData: _envelope deserializeTo: deserializeTo];
    [_request send];
    [[NSUserDefaults standardUserDefaults]removeObjectForKey:@"email"];
    [[NSUserDefaults standardUserDefaults]removeObjectForKey:@"password"];
   // [[NSUserDefaults standardUserDefaults]removeObjectForKey:@"language"];


    return _request;
}

- (SoapRequest*)changeUserPassword:(id)target action:(SEL)action params:(NSMutableString *)params deserializeTo:(id)deserializeTo {
    
    
    NSString* _envelope = [Soap createEnvelope: @"changeUserPassword" forNamespace: self.namespace forParameters: params withHeaders: self.headers];
    SoapRequest* _request = [SoapRequest create: target action: action service: self soapAction: @"?wsdl#changeUserPassword" postData: _envelope deserializeTo: deserializeTo];
    [_request send];
    return _request;
}

- (SoapRequest*)resetUserPassword:(id)target action:(SEL)action params:(NSMutableString *)params deserializeTo:(id)deserializeTo {
    
    
    NSString* _envelope = [Soap createEnvelope: @"resetUserPassword" forNamespace: self.namespace forParameters: params withHeaders: self.headers];
    SoapRequest* _request = [SoapRequest create: target action: action service: self soapAction: @"?wsdl#resetUserPassword" postData: _envelope deserializeTo: deserializeTo];
    [_request send];
    return _request;
}

- (SoapRequest*)forgotUsername:(id)target action:(SEL)action params:(NSMutableString *)params deserializeTo:(id)deserializeTo {
    
    NSString *email= [[NSUserDefaults standardUserDefaults] valueForKey:@"forgotEmail"];

    
    NSString *token= [WSCommon retrieveToken];
    NSDictionary* mainJSON = [NSDictionary dictionaryWithObjectsAndKeys:@"forgot",@"call",token,@"token",email,@"email", nil];

    
    NSError * err;
    NSData * jsonData = [NSJSONSerialization dataWithJSONObject:mainJSON options:0 error:&err];
    NSString * ResultString = [[NSString alloc] initWithData:jsonData encoding:NSUTF8StringEncoding];
    NSString* _envelope = ResultString;
    
    
    //NSString* _envelope = [Soap createEnvelope: @"forgotUsername" forNamespace: self.namespace forParameters: params withHeaders: self.headers];
    SoapRequest* _request = [SoapRequest create: target action: action service: self soapAction:nil postData: _envelope deserializeTo: deserializeTo];
    [_request send];
    [[NSUserDefaults standardUserDefaults]removeObjectForKey:@"forgotEmail"];

    return _request;
}

- (SoapRequest*)getSessionCookie:(id)target action:(SEL)action params:(NSMutableString *)params deserializeTo:(id)deserializeTo {
    
    
    NSString* _envelope = [Soap createEnvelope: @"getSessionCookie" forNamespace: self.namespace forParameters: params withHeaders: self.headers];
    SoapRequest* _request = [SoapRequest create: target action: action service: self soapAction: @"?wsdl#getSessionCookie" postData: _envelope deserializeTo: deserializeTo];
    [_request send];
    return _request;
}

- (SoapRequest*)search:(id)target action:(SEL)action params:(NSMutableString *)params deserializeTo:(id)deserializeTo {
    
    
    //NSString* _envelope = [FilterViewController filterJsonString];
    
   // NSString* _envelope = [Soap createEnvelope: @"search" forNamespace: self.namespace forParameters: params withHeaders: self.headers];
    
    NSString *xmlString = params;
    NSString *startTag = @"<filters>";
    NSString *endTag = @"</filters>";
    NSString *responseUserString;
    NSString *responseUserString2;
    
    
    NSString *startTag1 = @"<photo>";
    NSString *endTag1 = @"</photo>";
    NSString *responseUserString3;

    

    
    
    xmlString =[params stringByReplacingOccurrencesOfString: @"&quot;" withString: @"\""];
    //xmlString =[params stringByReplacingOccurrencesOfString: @"{" withString: @""];

    //NSLog(@"%@xmlStringxmlStringxmlString",xmlString);

    NSScanner *scanner = [[NSScanner alloc] initWithString:xmlString];
    [scanner scanUpToString:startTag intoString:nil];
    scanner.scanLocation += [startTag length];
    [scanner scanUpToString:endTag intoString:&responseUserString];
    
    NSScanner *scanner2 = [[NSScanner alloc] initWithString:xmlString];
    [scanner2 scanUpToString:startTag1 intoString:nil];
    scanner2.scanLocation += [startTag1 length];
    [scanner2 scanUpToString:endTag1 intoString:&responseUserString2];
    
   // NSLog(@"%@responseUserString2responseUserString2responseUserString2responseUserString2",responseUserString2);
    
    
    NSString* mainJSON;
    if(responseUserString2 ==nil)
    {
        
        NSScanner *scanner3 = [[NSScanner alloc] initWithString:xmlString];
        [scanner3 scanUpToString:startTag1 intoString:nil];
        scanner3.scanLocation += [startTag1 length];
        [scanner3 scanUpToString:endTag1 intoString:&responseUserString3];
        
        //NSLog(@"%@responseUserString3responseUserString3responseUserString3",responseUserString3);
       mainJSON= @"";
        
    }
    else{
        mainJSON=responseUserString2;

    }


NSMutableDictionary * response;
    

    NSData *data = [responseUserString dataUsingEncoding:NSUTF8StringEncoding];
    
 NSError * error = nil;
    response = [NSJSONSerialization JSONObjectWithData:data options:NSJSONReadingAllowFragments error:&error];
    if (!response) {
        //NSLog(@"%@errorerrorerrorerrorerror", error);
    }
    
    
    NSError *error2;

    NSMutableDictionary *newDict = [[NSMutableDictionary alloc] init];
    [newDict addEntriesFromDictionary: response];
    [newDict setObject:mainJSON forKey:@"photo"];
    
    
    NSData *jsonData1 = [NSJSONSerialization dataWithJSONObject:newDict
                                                       options:NSJSONWritingPrettyPrinted // Pass 0 if you don't care about the readability of the generated string
                                                         error:&error2];
    NSString *jsonString = [[NSString alloc] initWithData:jsonData1 encoding:NSUTF8StringEncoding];

    
    //NSString *resultString=[NSString stringWithFormat:@"my dictionary is %@", newDict];

    
    SoapRequest* _request = [SoapRequest create: target action: action service: self soapAction:nil postData:jsonString  deserializeTo: deserializeTo];
    [_request send];
    return _request;
}

- (SoapRequest*)report:(id)target action:(SEL)action params:(NSMutableString *)params deserializeTo:(id)deserializeTo {
    
    NSMutableDictionary *_wasreceivedData = [[NSUserDefaults standardUserDefaults] valueForKey:@"uploadDict"];
    NSMutableDictionary *mutableSettings = [_wasreceivedData mutableCopy];

    [mutableSettings removeObjectForKey:@"uuid"];
    NSError *error;
    NSData *jsonData = [NSJSONSerialization dataWithJSONObject:mutableSettings // Here you can pass array or dictionary
                                                       options:kNilOptions // Pass 0 if you don't care about the readability of the generated string
                                                         error:&error];
    NSString *jsonString;
    if (jsonData) {
        jsonString = [[NSString alloc] initWithData:jsonData encoding:NSUTF8StringEncoding];
        //This is your JSON String
        //NSUTF8StringEncoding encodes special characters using an escaping scheme
    } else {
       // NSLog(@"Got an error: %@", error);
        jsonString = @"";
    }
    
    
    
//NSString* _envelope = [Soap createEnvelope: @"report" forNamespace: self.namespace forParameters: params withHeaders: self.headers];
    //NSString* _envelope=jsonString;
    SoapRequest* _request = [SoapRequest create: target action: action service: self soapAction:nil postData: jsonString deserializeTo: deserializeTo];
    [_request send];
    [[NSUserDefaults standardUserDefaults]removeObjectForKey:@"uploadDict"];
    return _request;
}


- (SoapRequest*)searchUuid:(id)target action:(SEL)action params:(NSMutableString *)params deserializeTo:(id)deserializeTo {
    NSMutableDictionary *_wasreceivedData = [[NSUserDefaults standardUserDefaults] valueForKey:@"UUIDString"];
    
    
    NSError *error;
    NSData *jsonData = [NSJSONSerialization dataWithJSONObject:_wasreceivedData // Here you can pass array or dictionary
                                                       options:kNilOptions // Pass 0 if you don't care about the readability of the generated string
                                                         error:&error];
    NSString *jsonString;
    if (jsonData) {
        jsonString = [[NSString alloc] initWithData:jsonData encoding:NSUTF8StringEncoding];
        //This is your JSON String
        //NSUTF8StringEncoding encodes special characters using an escaping scheme
    } else {
        //NSLog(@"Got an error: %@", error);
        jsonString = @"";
    }
    
    SoapRequest* _request = [SoapRequest create: target action: action service: self soapAction:nil postData: jsonString deserializeTo: deserializeTo];
    [_request send];
    
    [[NSUserDefaults standardUserDefaults]removeObjectForKey:@"UUIDString"];
    return _request;

}


- (SoapRequest*)setUserPref:(id)target action:(SEL)action params:(NSMutableString *)params deserializeTo:(id)deserializeTo {
    NSString *locale= [[NSUserDefaults standardUserDefaults] valueForKey:@"language"];
    NSString *token= [WSCommon retrieveToken];
    NSDictionary* mainJSON = [NSDictionary dictionaryWithObjectsAndKeys:@"pref",@"call",token,@"token",locale,@"locale", nil];
    
    
    NSError * err;
    NSData * jsonData = [NSJSONSerialization dataWithJSONObject:mainJSON options:0 error:&err];
    NSString * ResultString = [[NSString alloc] initWithData:jsonData encoding:NSUTF8StringEncoding];
    NSString* _envelope = ResultString;
    
    SoapRequest* _request = [SoapRequest create: target action: action service: self soapAction:nil postData: _envelope deserializeTo: deserializeTo];
    [_request send];
    
   // [[NSUserDefaults standardUserDefaults]removeObjectForKey:@"language"];
    return _request;
    
}

- (SoapRequest*)confirmCode:(id)target action:(SEL)action params:(NSMutableString *)params deserializeTo:(id)deserializeTo {
    NSString *ConfirmCode= [[NSUserDefaults standardUserDefaults] valueForKey:@"ConfirmCode"];

    NSString *token= [WSCommon retrieveToken];
    NSDictionary* mainJSON = [NSDictionary dictionaryWithObjectsAndKeys:@"confirm",@"call",token,@"token",ConfirmCode,@"confirmation", nil];
    
    
    NSError * err;
    NSData * jsonData = [NSJSONSerialization dataWithJSONObject:mainJSON options:0 error:&err];
    NSString * ResultString = [[NSString alloc] initWithData:jsonData encoding:NSUTF8StringEncoding];
    NSString* _envelope = ResultString;
    
    SoapRequest* _request = [SoapRequest create: target action: action service: self soapAction:nil postData: _envelope deserializeTo: deserializeTo];
    [_request send];
    
    [[NSUserDefaults standardUserDefaults]removeObjectForKey:@"ConfirmCode"];
    return _request;
    
}

- (SoapRequest*)updateRecord:(id)target action:(SEL)action params:(NSMutableString *)params deserializeTo:(id)deserializeTo {
    
    NSMutableDictionary *_wasreceivedData = [[NSUserDefaults standardUserDefaults] valueForKey:@"uploadDict"];
    NSMutableDictionary *mutableSettings = [_wasreceivedData mutableCopy];
    [mutableSettings setObject:@"revise" forKey:@"call"];
    [mutableSettings setObject:@"PA1" forKey:@"format"];
    
    NSError *error;
    NSData *jsonData = [NSJSONSerialization dataWithJSONObject:mutableSettings // Here you can pass array or dictionary
                                                       options:NSJSONWritingPrettyPrinted // Pass 0 if you don't care about the readability of the generated string
                                                         error:&error];
    NSString *jsonString;
    if (jsonData) {
        jsonString = [[NSString alloc] initWithData:jsonData encoding:NSUTF8StringEncoding];
        //This is your JSON String
        //NSUTF8StringEncoding encodes special characters using an escaping scheme
    } else {
        //NSLog(@"Got an error: %@", error);
        jsonString = @"";
    }
    

    
   // NSString* _envelope = [Soap createEnvelope: @"updateRecord" forNamespace: self.namespace forParameters: params withHeaders: self.headers];
    SoapRequest* _request = [SoapRequest create: target action: action service: self soapAction:nil postData: jsonString deserializeTo: deserializeTo];
    [_request send];
    [[NSUserDefaults standardUserDefaults]removeObjectForKey:@"UUIDString"];
    [[NSUserDefaults standardUserDefaults]removeObjectForKey:@"uploadDict"];


    return _request;
}

- (SoapRequest*)deleteRecord:(id)target action:(SEL)action params:(NSMutableString *)params deserializeTo:(id)deserializeTo {
    
    NSMutableDictionary *_wasreceivedData = [[NSUserDefaults standardUserDefaults] valueForKey:@"deleteObject"];
   
    
    NSError *error;
    NSData *jsonData = [NSJSONSerialization dataWithJSONObject:_wasreceivedData // Here you can pass array or dictionary
                                                       options:NSJSONWritingPrettyPrinted // Pass 0 if you don't care about the readability of the generated string
                                                         error:&error];
    NSString *jsonString;
    if (jsonData) {
        jsonString = [[NSString alloc] initWithData:jsonData encoding:NSUTF8StringEncoding];
        //This is your JSON String
        //NSUTF8StringEncoding encodes special characters using an escaping scheme
    } else {
        //NSLog(@"Got an error: %@", error);
        jsonString = @"";
    }
    
    
    
    // NSString* _envelope = [Soap createEnvelope: @"updateRecord" forNamespace: self.namespace forParameters: params withHeaders: self.headers];
    SoapRequest* _request = [SoapRequest create: target action: action service: self soapAction:nil postData: jsonString deserializeTo: deserializeTo];
    [_request send];
    return _request;
}

- (SoapRequest*)reportAbuse:(id)target action:(SEL)action params:(NSMutableString *)params deserializeTo:(id)deserializeTo {
    
    NSString *uuid = [[NSUserDefaults standardUserDefaults] valueForKey:@"reportAbuse"];
    
    NSString *token= [WSCommon retrieveToken];
    NSDictionary* mainJSON = [NSDictionary dictionaryWithObjectsAndKeys:@"abuse",@"call",token,@"token",uuid,@"uuid",@"4",@"type", nil];
    
    NSError * err;
    NSData * jsonData = [NSJSONSerialization dataWithJSONObject:mainJSON options:0 error:&err];
    NSString * ResultString = [[NSString alloc] initWithData:jsonData encoding:NSUTF8StringEncoding];
    NSString* _envelope = ResultString;

    
    //NSString* _envelope = [Soap createEnvelope: @"reportAbuse" forNamespace: self.namespace forParameters: params withHeaders: self.headers];
    SoapRequest* _request = [SoapRequest create: target action: action service: self soapAction:nil postData: _envelope deserializeTo: deserializeTo];
    [_request send];
    return _request;
}


- (SoapRequest*)followRecord:(id)target action:(SEL)action params:(NSMutableString *)params deserializeTo:(id)deserializeTo {
    
    
    NSString* _envelope = [Soap createEnvelope: @"followRecord" forNamespace: self.namespace forParameters: params withHeaders: self.headers];
    SoapRequest* _request = [SoapRequest create: target action: action service: self soapAction: @"?wsdl#followRecord" postData: _envelope deserializeTo: deserializeTo];
    [_request send];
    return _request;
}
- (SoapRequest*)addComment:(id)target action:(SEL)action params:(NSMutableString *)params deserializeTo:(id)deserializeTo {
    NSString *token= [WSCommon retrieveToken];

    NSMutableDictionary *_wasreceivedData = [[NSUserDefaults standardUserDefaults] valueForKey:@"Comments"];
    NSMutableDictionary *mutableSettings = [_wasreceivedData mutableCopy];
    [mutableSettings setObject:token forKey:@"token"];
    
    NSError *error;
    NSData *jsonData = [NSJSONSerialization dataWithJSONObject:mutableSettings // Here you can pass array or dictionary
                                                       options:NSJSONWritingPrettyPrinted // Pass 0 if you don't care about the readability of the generated string
                                                         error:&error];
    NSString *jsonString;
    if (jsonData) {
        jsonString = [[NSString alloc] initWithData:jsonData encoding:NSUTF8StringEncoding];
        //This is your JSON String
        //NSUTF8StringEncoding encodes special characters using an escaping scheme
    } else {
        //NSLog(@"Got an error: %@", error);
        jsonString = @"";
    }

    
    //NSString* _envelope = [Soap createEnvelope: @"addComment" forNamespace: self.namespace forParameters: params withHeaders: self.headers];
    SoapRequest* _request = [SoapRequest create: target action: action service: self soapAction:nil postData: jsonString deserializeTo: deserializeTo];
    [_request send];
    return _request;
}

- (SoapRequest*)getImageCountsAndTokens:(id)target action:(SEL)action params:(NSMutableString *)params deserializeTo:(id)deserializeTo {
    
    
    NSString* _envelope = [Soap createEnvelope: @"getImageCountsAndTokens" forNamespace: self.namespace forParameters: params withHeaders: self.headers];
    SoapRequest* _request = [SoapRequest create: target action: action service: self soapAction: @"?wsdl#getImageCountsAndTokens" postData: _envelope deserializeTo: deserializeTo];
    [_request send];
    return _request;
}

- (SoapRequest*)getImageList:(id)target action:(SEL)action params:(NSMutableString *)params deserializeTo:(id)deserializeTo {
    
    
    NSString* _envelope = [Soap createEnvelope: @"getImageList" forNamespace: self.namespace forParameters: params withHeaders: self.headers];
    SoapRequest* _request = [SoapRequest create: target action: action service: self soapAction: @"?wsdl#getImageList" postData: _envelope deserializeTo: deserializeTo];
    [_request send];
    return _request;
}

- (SoapRequest*)getImageListBlock:(id)target action:(SEL)action params:(NSMutableString *)params deserializeTo:(id)deserializeTo {
    
    
    NSString* _envelope = [Soap createEnvelope: @"getImageListBlock" forNamespace: self.namespace forParameters: params withHeaders: self.headers];
    SoapRequest* _request = [SoapRequest create: target action: action service: self soapAction: @"?wsdl#getImageListBlock" postData: _envelope deserializeTo: deserializeTo];
    [_request send];
    return _request;
}

- (SoapRequest*)getNullTokenList:(id)target action:(SEL)action params:(NSMutableString *)params deserializeTo:(id)deserializeTo {
    
    
    NSString* _envelope = [Soap createEnvelope: @"getNullTokenList" forNamespace: self.namespace forParameters: params withHeaders: self.headers];
    SoapRequest* _request = [SoapRequest create: target action: action service: self soapAction: @"?wsdl#getNullTokenList" postData: _envelope deserializeTo: deserializeTo];
    [_request send];
    return _request;
}

- (SoapRequest*)appCheck:(id)target action:(SEL)action params:(NSMutableString *)params deserializeTo:(id)deserializeTo {
    
    
    NSString* _envelope = [Soap createEnvelope: @"appCheck" forNamespace: self.namespace forParameters: params withHeaders: self.headers];
    SoapRequest* _request = [SoapRequest create: target action: action service: self soapAction: @"?wsdl#appCheck" postData: _envelope deserializeTo: deserializeTo];
    [_request send];
    return _request;
}

- (SoapRequest*)registerApplePushToken:(id)target action:(SEL)action params:(NSMutableString *)params deserializeTo:(id)deserializeTo {
    
    
    NSString* _envelope = [Soap createEnvelope: @"registerApplePushToken" forNamespace: self.namespace forParameters: params withHeaders: self.headers];
    SoapRequest* _request = [SoapRequest create: target action: action service: self soapAction: @"?wsdl#registerApplePushToken" postData: _envelope deserializeTo: deserializeTo];
    [_request send];
    return _request;
}

- (SoapRequest*)registerGCM:(id)target action:(SEL)action params:(NSMutableString *)params deserializeTo:(id)deserializeTo {
    
    
    NSString* _envelope = [Soap createEnvelope: @"registerGCM" forNamespace: self.namespace forParameters: params withHeaders: self.headers];
    SoapRequest* _request = [SoapRequest create: target action: action service: self soapAction: @"?wsdl#registerGCM" postData: _envelope deserializeTo: deserializeTo];
    [_request send];
    return _request;
}

- (SoapRequest*)getHospitalList:(id)target action:(SEL)action params:(NSMutableString *)params deserializeTo:(id)deserializeTo {
    
    
    NSString* _envelope = [Soap createEnvelope: @"getHospitalList" forNamespace: self.namespace forParameters: params withHeaders: self.headers];
    SoapRequest* _request = [SoapRequest create: target action: action service: self soapAction: @"?wsdl#getHospitalList" postData: _envelope deserializeTo: deserializeTo];
    [_request send];
    return _request;
}

- (SoapRequest*)getHospitalData:(id)target action:(SEL)action params:(NSMutableString *)params deserializeTo:(id)deserializeTo {
    
    
    NSString* _envelope = [Soap createEnvelope: @"getHospitalData" forNamespace: self.namespace forParameters: params withHeaders: self.headers];
    SoapRequest* _request = [SoapRequest create: target action: action service: self soapAction: @"?wsdl#getHospitalData" postData: _envelope deserializeTo: deserializeTo];
    [_request send];
    return _request;
}

- (SoapRequest*)getHospitalPolicy:(id)target action:(SEL)action params:(NSMutableString *)params deserializeTo:(id)deserializeTo {
    
    
    NSString* _envelope = [Soap createEnvelope: @"getHospitalPolicy" forNamespace: self.namespace forParameters: params withHeaders: self.headers];
    SoapRequest* _request = [SoapRequest create: target action: action service: self soapAction: @"?wsdl#getHospitalPolicy" postData: _envelope deserializeTo: deserializeTo];
    [_request send];
    return _request;
}

- (SoapRequest*)getHospitalLegalese:(id)target action:(SEL)action params:(NSMutableString *)params deserializeTo:(id)deserializeTo {
    
    
    NSString* _envelope = [Soap createEnvelope: @"getHospitalLegalese" forNamespace: self.namespace forParameters: params withHeaders: self.headers];
    SoapRequest* _request = [SoapRequest create: target action: action service: self soapAction: @"?wsdl#getHospitalLegalese" postData: _envelope deserializeTo: deserializeTo];
    [_request send];
    return _request;
}

- (SoapRequest*)getHospitalLegaleseAnon:(id)target action:(SEL)action params:(NSMutableString *)params deserializeTo:(id)deserializeTo {
    
    
    NSString* _envelope = [Soap createEnvelope: @"getHospitalLegaleseAnon" forNamespace: self.namespace forParameters: params withHeaders: self.headers];
    SoapRequest* _request = [SoapRequest create: target action: action service: self soapAction: @"?wsdl#getHospitalLegaleseAnon" postData: _envelope deserializeTo: deserializeTo];
    [_request send];
    return _request;
}

- (SoapRequest*)getHospitalLegaleseTimestamps:(id)target action:(SEL)action params:(NSMutableString *)params deserializeTo:(id)deserializeTo {
    
    
    NSString* _envelope = [Soap createEnvelope: @"getHospitalLegaleseTimestamps" forNamespace: self.namespace forParameters: params withHeaders: self.headers];
    SoapRequest* _request = [SoapRequest create: target action: action service: self soapAction: @"?wsdl#getHospitalLegaleseTimestamps" postData: _envelope deserializeTo: deserializeTo];
    [_request send];
    return _request;
}

- (SoapRequest*)getUuidByMassCasualtyId:(id)target action:(SEL)action params:(NSMutableString *)params deserializeTo:(id)deserializeTo {
    
    
    NSString* _envelope = [Soap createEnvelope: @"getUuidByMassCasualtyId" forNamespace: self.namespace forParameters: params withHeaders: self.headers];
    SoapRequest* _request = [SoapRequest create: target action: action service: self soapAction: @"?wsdl#getUuidByMassCasualtyId" postData: _envelope deserializeTo: deserializeTo];
    [_request send];
    return _request;
}

- (SoapRequest*)reservePatientIds:(id)target action:(SEL)action params:(NSMutableString *)params deserializeTo:(id)deserializeTo {
    
    
    NSString* _envelope = [Soap createEnvelope: @"reservePatientIds" forNamespace: self.namespace forParameters: params withHeaders: self.headers];
    SoapRequest* _request = [SoapRequest create: target action: action service: self soapAction: @"?wsdl#reservePatientIds" postData: _envelope deserializeTo: deserializeTo];
    [_request send];
    return _request;
}
@end
